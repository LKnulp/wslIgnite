#!/bin/bash
### Set Language
TEXTDOMAIN=virtualhost

source /wsl.cfg

debug="false"

### Set colors
ERROR='\033[1;35m' # light purple
QUESTION='\033[1;33m' # yellow
SUCCESS='\033[0;32m' # green
PROCESSING='\033[1;36m' # light cyan
NC='\033[0m' # No Color

function show_help () {
	    #Set the value
    	debug=${true:-false}
	
	if [ debug == "true" ]; then
    	echo -e "Usage:  $BASH_SOURCE [ OPTIONS ] ${PROCESSING}--${NC} [ DOMAIN ] [ ? RealiveRootDir ] "
		echo -e "					${PROCESSING}^^^^${NC}"
		echo -e "					${PROCESSING}use${NC}"
	else 
    	echo -e "Usage:  $BASH_SOURCE [ OPTIONS ] -- [ DOMAIN ] [ ? RealiveRootDir ] "
    	echo "	OPTIONS := { -c[reate] | -r[emove] | -o[wner] | -e[mail] | -h[help] | -d[ebug] }"
		echo -e "\n"
		echo -e "	ATTENTION:"
		echo -e "	If you see an error during reload of apache when creating,"
		echo -e "	remove the vhost directory and try again." 
		echo -e "	The log directory will not be created if the vhost directory already exists.\n"
	fi
}

while [ -n "$1" ]; do # while loop starts
	case "$1" in
		-c) action="create";;
        -r) action="delete";;
        -d) debug="true";;
		-o) owner=$2;;
		-e) email=$2;;
		-h) show_help
			exit;;
		--)
			shift # The double dash makes them parameters
			break
			;;
		*) echo -e "${ERROR}Option $1 not recognized. \nDid you forget to use '--' between OPTIONS and PARAMETERS? ${NC}" 
			show_help true
			exit 1
			;;
	esac
	shift
done

domain=${@:$OPTIND}
relativeRootDir=${@:$OPTIND+1}
owner=$WSL_USER
apacheUser=$(ps -ef | egrep '(httpd|apache2|apache)' | grep -v root | head -n1 | awk '{print $1}')
email=$WSL_EMAIL
sitesEnabled=$WSL_VHOSTS_ENABLED
sitesAvailable=$WSL_VHOSTS_AVAILABLE
webDir=$WSL_WEBDIR

if [ $debug == "true" ]; then
	echo -e "${PROCESSING}action:${NC} 		$action"
	echo -e "${PROCESSING}domain:${NC} 		$domain"
	echo -e "${PROCESSING}relativeRootDir:${NC} $relativeRootDir"
	echo -e "${PROCESSING}owner:${NC} 			$owner"
	echo -e "${PROCESSING}apacheUser:${NC} 		$apacheUser"
	echo -e "${PROCESSING}email:${NC} 			$email"
	echo -e "${PROCESSING}sitesEnabled:${NC} 		$sitesEnabled"
	echo -e "${PROCESSING}sitesAvailable:${NC} 	$sitesAvailable"
	echo -e "${PROCESSING}webDir:${NC} 		$webDir"
	exit;
fi

if [ "$(whoami)" != 'root' ]; then
	echo -e $"${ERROR}You have no permission to run $0 as non-root user. Use sudo!${NC}"
	exit 1;
fi

if [ "$action" != 'create' ] && [ "$action" != 'delete' ]; then
	echo -e $"${ERROR}You need to prompt for action (-c[reate] | -r[emove])${NC}"
	show_help
	exit 1;
fi

while [ "$domain" == "" ]; do
	echo -e $"${QUESTION}Please provide domain. e.g. dev.project.local:${NC}"
	read domain
done

if [ "$action" == 'create' ] && [ "$relativeRootDir" == '' ]; then
	echo -e -n $"${QUESTION}Is there a different root directory than $webDir$domain? Press ENTER to use $webDir$domain:${NC}"
	read relativeRootDir
	echo -e "\n"
fi

appDir=$webDir$domain
sitesAvailabledomain=$sitesAvailable$domain.conf
logDir="/var/log/apache2/$domain"
if [ "$relativeRootDir" == '' ]; then
	webRoot=$appDir
else
	webRoot=$appDir/$relativeRootDir
fi

if [ "$action" == 'create' ]; then
	### check if domain already exists
	if [ -e $sitesAvailabledomain ]; then
		echo -e $"${ERROR}This domain already exists.\nPlease Try Another one!${NC}"
		exit;
	fi

	### check if directory exists or not
	if ! [ -d $appDir ]; then
		### create the directory
		echo -e $"* ${PROCESSING}Creating vhost directory $appDir...\n${NC}"
		mkdir $appDir
		echo -e $"* ${PROCESSING}Adapting rights of $appDir to $owner...\n${NC}"
        chown $owner:$owner $appDir
		echo -e $"* ${PROCESSING}Adapting rights of $appDir to 775...\n${NC}"
		chmod 775 $appDir

		### create lower root directory if necessary
		if ! [ "$relativeRootDir" == "" ]; then
				echo -e $"* ${PROCESSING}Creating webroot directory $webRoot...\n${NC}"
				mkdir $webRoot
				echo -e $"* ${PROCESSING}Adapting rights of $webRoot to $owner...\n${NC}"
				chown $owner:$owner $webRoot
				echo -e $"* ${PROCESSING}Adapting rights of $webRoot to 775...\n${NC}"
				chmod 775 $webRoot
		fi

		echo -e $"* ${PROCESSING}Creating log directory $logDir...\n${NC}"
		mkdir $logDir
		echo -e $"* ${PROCESSING}Adapting rights of $logDir to root...\n${NC}"
		chown root:root $logDir
		echo -e $"* ${PROCESSING}Adapting rights of $logDir to 775...\n${NC}"
		chmod 775 $logDir

		### write test file in the new domain dir
		echo -e $"* ${PROCESSING}Write test-file to $webRoot/phpinfo.php...\n${NC}"
		if ! echo "<?php echo phpinfo(); ?>" > $webRoot/phpinfo.php
		then
			echo -e $"${ERROR}ERROR: Not able to write in file $webRoot\phpinfo.php. Please check permissions!${NC}"
			exit;
		else
			echo -e $"* ${PROCESSING}Added content to $webRoot\phpinfo.php\n${NC}"
		fi
	fi

	echo -e $"* ${PROCESSING}Creating vhost config file...\n${NC}"
	if ! echo "
<VirtualHost *:80>
	ServerAdmin $email	
	ServerName $domain
	ServerAlias $domain
	DocumentRoot $webRoot
	<Directory />
		AllowOverride All
	</Directory>
	<Directory $webRoot>
		Options Indexes FollowSymLinks MultiViews
		AllowOverride all
		Require all granted
	</Directory>
	ErrorLog /var/log/apache2/$domain/error.log
	LogLevel error
	CustomLog /var/log/apache2/$domain/access.log combined
</VirtualHost>" > $sitesAvailabledomain
	then
		echo -e $"${ERROR}ERROR: Couldn't create $domain file!${NC}"
		exit;
	else
		echo -e $"* ${PROCESSING}New Virtual Host Created!\n${NC}"
	fi

	### Add domain in /etc/hosts
	if ! echo "127.0.0.1	$domain" >> /etc/hosts
	then
		echo -e $"${ERROR}ERROR: Not able to write in /etc/hosts!${NC}"
		exit;
	else
		echo -e $"* ${PROCESSING}Host added to /etc/hosts file!\n${NC}"
	fi

	if [ "$owner" == "" ]; then
		iam=$(whoami)
		if [ "$iam" == "root" ]; then
			echo -e $"* ${PROCESSING}Adapting rights of $appDir to $apacheUser...\n${NC}"
			chown -R $apacheUser:$apacheUser $appDir
		else
			echo -e $"* ${PROCESSING}Adapting rights of $appDir to $iam...\n${NC}"		
			chown -R $iam:$iam $appDir
		fi
	else
		echo -e $"* ${PROCESSING}Adapting rights of $appDir to $owner...\n${NC}"	
		chown -R $owner:$owner $appDir
	fi

	### enable website
	echo -e $"* ${PROCESSING}Adding new vhost to Apache...\n${NC}"
	a2ensite $domain > /dev/null

	### restart Apache
	echo -e $"* ${PROCESSING}Reloading Apache...\n${NC}"
	/etc/init.d/apache2 reload > /dev/null

	### open windows hosts file for editing
	echo -e $"* ${PROCESSING}Opening Windows hosts file...\n${NC}"
	/mnt/c/Program\ Files/Microsoft\ VS\ Code/bin/code /mnt/c/Windows/System32/drivers/etc/hosts > /dev/null

	### show the finished message
	echo -e $"${SUCCESS}Complete! \nYou now have a new Virtual Host \nYour new host is: http://$domain \nAnd its located at $appDir${NC}\n"
	exit;
else
	### check whether domain already exists
	if ! [ -e $sitesAvailabledomain ]; then
		echo -e $"${ERROR}ERROR: This domain does not exist.\nPlease try another one!${NC}"
		exit;
	else
		### Delete domain in /etc/hosts
		echo -e $"* ${PROCESSING}Update /etc/hosts file...\n${NC}"
		newhost=${domain//./\\.}
		sed -i "/$newhost/d" /etc/hosts

		### disable website
		echo -e $"* ${PROCESSING}Removing vhost from Apache...\n${NC}"
		a2dissite $domain > /dev/null

		### restart Apache
		echo -e $"* ${PROCESSING}Reloading Apache...\n${NC}"
		/etc/init.d/apache2 reload > /dev/null

		### Delete virtual host rules files
		echo -e $"* ${PROCESSING}Removing Apache config file $sitesAvailabledomain...\n${NC}"
		rm $sitesAvailabledomain

		### Delete virtual host log files
		echo -e $"* ${PROCESSING}Removing log directory $logDir...\n${NC}"
		rm -rf $logDir
	fi

	### check if directory exists or not
	if [ -d $appDir ]; then
		echo -e -n $"${QUESTION}Delete host root directory? (y/n)  ${NC}" 
		read deldir

		if [ "$deldir" == 'y' -o "$deldir" == 'Y' ]; then
			### Delete the directory
			echo -e $"\n* ${PROCESSING}Removing vhost directory...${NC}"
			rm -rf $appDir
			
			echo -e $"\n* ${PROCESSING}Directory deleted!${NC}"
		else
			echo -e $"\n* ${PROCESSING}Host directory conserved!${NC}"
		fi
	else
		echo -e $"\n${ERROR}$appDir directory not found. Ignored!${NC}"
	fi

	### open windows hosts file for editing
	echo -e $"\n* ${PROCESSING}Opening Windows hosts file...\n${NC}"
	/mnt/c/Program\ Files/Microsoft\ VS\ Code/bin/code /mnt/c/Windows/System32/drivers/etc/hosts > /dev/null

	### show the finished message
	echo -e $"\n${SUCCESS}Complete!\nYou just removed Virtual Host $domain!${NC}\n"
	exit 0;
fi
